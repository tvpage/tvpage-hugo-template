filter:
    excluded_paths:
        - '*.min.js'
        - '*/vendor/*'
        - '*/build/*'
        - '*/dist/*'
        - '*/test/*'
        - '*/captivate/*'
        - '*build.min.js*'
        - '*build.js*'
        - '*text.js*'
        - '*gruntfile.js*'
        - '*Gruntfile.js*'
        
checks:
    javascript:
        var_never_initialized: true
        unsafe_mutable_variable_usage: true
        no_use_before_define: true
        no_undef: true
        no_inner_declarations: true
        no_eval: true
        no_implied_eval: true
        no_debugger: true
        check_too_many_arguments: true
        no_loop_var_assign: true

build:
    dependencies:
        before:
            - cd static && npm install

    tests:
        override:
            -
                command: 'cd static && npm test && ls -la'
                # coverage:
                #     file: 'static/coverage/cobertura/cobertura.xml'
                #     format: 'cobertura'

build_failure_conditions:
    # No new classes/methods with a rating of D or worse
    - 'elements.rating(<= D).new.exists'
    
    # Code Quality Rating drops below 6
    - 'project.metric("scrutinizer.quality", < 6)'

    # No new coding style issues allowed
    - 'issues.label("coding-style").severity(>= MINOR).new.exists'

    # New issues of major or higher severity
    - 'issues.severity(>= MAJOR).new.exists'

    # More than 5 new coding style issues.
    #    - 'issues.label("coding-style").new.count > 5'
    
    # No coding style issues allowed
    #    - 'issues.label("coding-style").exists'

    # No classes/methods with a rating of D or worse
    #- 'elements.rating(<= D).exists'
